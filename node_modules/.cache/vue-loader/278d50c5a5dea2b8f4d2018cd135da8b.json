{"remainingRequest":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\src\\components\\Account.vue?vue&type=style&index=0&id=6d0444a6&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\src\\components\\Account.vue","mtime":1618215631075},{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lowxi\\Documents\\GitHub\\AskAway\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW5wdXQgew0KICAgIGZsb2F0OiByaWdodDsNCiAgICBtYXJnaW4tbGVmdDogMTAwcHg7DQogICAgd2lkdGg6IDI1MHB4DQp9DQpzZWxlY3Qgew0KICAgIGZsb2F0OiByaWdodDsNCiAgICBjbGVhcjogYm90aDsNCiAgICB3aWR0aDogMTAwcHgNCn0NCi5oaW50cyB7DQoJbWF4LXdpZHRoOjMwMHB4Ow0KCXBhZGRpbmc6MWVtOw0KCWJhY2tncm91bmQ6d2hpdGVzbW9rZTsNCgltYXJnaW46IDEuNWVtIDA7DQoJZm9udC1zaXplOiAuOWVtOw0KfQ0KLmVuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMyLDUyLDc5KTsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgY29sb3I6IHdoaXRlOw0KICAgIHBhZGRpbmc6IDEycHggMjBweDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgICBmb250LXNpemU6IDE0cHg7DQogICAgbWFyZ2luOiA4cHggNHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBib3JkZXItcmFkaXVzOiA4cHg7DQp9DQo="},{"version":3,"sources":["Account.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Account.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<div id=\"fitb\">\r\n  <h1>Personal Info:</h1>\r\n  <h4>You may update your personal information here!</h4>\r\n  <div>\r\n    <label for=\"name\">First Name:\r\n      <input type=\"text\" v-model=\"fname\" value=\"fname\">\r\n    </label>\r\n    <br><br>\r\n\r\n    <label for=\"name\">Last Name:\r\n      <input type=\"text\" v-model=\"lname\" value=\"lname\">\r\n    </label>\r\n    <br><br>\r\n\r\n    <label for=\"name\">Gender:\r\n      <select v-model=\"gender\">\r\n        <option disabled value=\"\"></option>\r\n        <option>Male</option>\r\n        <option>Female</option>\r\n      </select>\r\n    </label><br><br>\r\n\r\n    <label for=\"name\">Age:\r\n      <input type=\"number\" v-model=\"age\" value=\"age\">\r\n    </label>\r\n    <br><br>\r\n\r\n    <label for=\"name\">Email:\r\n      <input type=\"text\" v-model=\"email\" value=\"email\">\r\n    </label> <br><br>\r\n    <br>\r\n  </div>\r\n\r\n  <button class=\"end\">Save All Changes</button>\r\n\r\n  <br><br><br>\r\n\r\n  <form novalidate @submit.prevent=\"newPassword\">\r\n  <h1>Change Password:</h1>\r\n    <label for=\"resetEmail\">Email:\r\n      <input type=\"email\" v-model=\"resetEmail\" value=\"resetEmail\" id=\"resetEmail\">\r\n    </label>\r\n    <br><br>\r\n    <button class=\"end\" type=\"submit\">Send Reset Email</button><br>\r\n  </form>\r\n  <br>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n//import firebase from 'firebase'\r\nexport default {\r\n  name: \"Account\",\r\n  data() {\r\n    return {\r\n      rules: [\r\n        { message:'One lowercase letter required.', regex:/[a-z]+/ },\r\n        { message:\"One uppercase letter required.\",  regex:/[A-Z]+/ },\r\n        { message:\"8 characters minimum.\", regex:/.{8,}/ },\r\n        { message:\"One number required.\", regex:/[0-9]+/ }\r\n      ],\r\n      fname:'',\r\n      lname:'',\r\n      gender:'',\r\n      age:'',\r\n      email:'',\r\n      passwordFieldType: 'password',\r\n      cpassword:'',\r\n      npassword:'',\r\n      cnpassword:'',\r\n      submitted:false,\r\n      resetEmail:''\r\n    }\r\n  },\r\n  methods: {\r\n    switchVisibility() {\r\n      this.passwordFieldType = this.passwordFieldType === 'password' ? 'text' : 'password'\r\n    },\r\n    resetPasswords () {\r\n      this.cpassword = ''\r\n      this.npassword = ''\r\n      this.cnpassword = ''\r\n      this.submitted = true\r\n      setTimeout(() => {\r\n        this.submitted = false\r\n      }, 2000)\r\n    },\r\n    newPassword() {\r\n      // firebase\r\n      //     .auth()\r\n      //     .sendPasswordResetEmail(this.resetEmail)\r\n      //     .then(() => {\r\n      //       alert('Check your registered email to reset the password!')\r\n      //     }).catch((error) => {\r\n      //   alert(error)\r\n      // })\r\n    }\r\n  },\r\n  computed: {\r\n    notSamePasswords () {\r\n      if (this.passwordsFilled) {\r\n        return (this.npassword !== this.cnpassword)\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    passwordsFilled () {\r\n      return (this.cpassword !== '' && this.npassword !== '' && this.cnpassword !== '')\r\n    },\r\n    passwordValidation () {\r\n      let errors = []\r\n      for (let condition of this.rules) {\r\n        if (!condition.regex.test(this.npassword)) {\r\n          errors.push(condition.message)\r\n        }\r\n      }\r\n      if (errors.length === 0) {\r\n        return { valid:true, errors }\r\n      } else {\r\n        return { valid:false, errors }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {\r\n    float: right;\r\n    margin-left: 100px;\r\n    width: 250px\r\n}\r\nselect {\r\n    float: right;\r\n    clear: both;\r\n    width: 100px\r\n}\r\n.hints {\r\n\tmax-width:300px;\r\n\tpadding:1em;\r\n\tbackground:whitesmoke;\r\n\tmargin: 1.5em 0;\r\n\tfont-size: .9em;\r\n}\r\n.end {\r\n    background-color: rgb(32,52,79);\r\n    border: none;\r\n    color: white;\r\n    padding: 12px 20px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 14px;\r\n    margin: 8px 4px;\r\n    cursor: pointer;\r\n    border-radius: 8px;\r\n}\r\n</style>\r\n"]}]}